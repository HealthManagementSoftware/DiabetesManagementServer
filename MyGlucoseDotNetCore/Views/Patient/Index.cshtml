@*@model IEnumerable<MyGlucoseDotNetCore.Models.ViewModels.DoctorViewModel>*@
@model Patient

@{
    ViewData["Title"] = "Index";
}

<h2>Welcome Patient</h2>

<div class="row">
    <div class="form-group col-sm-4">
        <select onchange="location=this.value;" class="form-control">
            <option value="">-- Select a Graph to View --</option>
            <option value="/Chart/GlucoseIndex/?UserName=@Model.UserName">Glucose Graph</option>
            <option value="/Chart/ExerciseIndex/?UserName=@Model.UserName">Exercise Graph</option>
            <option value="/Chart/MealIndex/?UserName=@Model.UserName">Meal Graph</option>
            <option value="/Chart/StepIndex/?UserName=@Model.UserName">Step Graph</option>
        </select>
    </div>
</div>

@*<a asp-controller="Chart" asp-action="GlucoseIndex" asp-route-UserName="@Model.UserName">Average Glucose Graph</a> |
<a asp-controller="Chart" asp-action="MealIndex" asp-route-UserName="@Model.UserName">Carb Graph</a> |
<a asp-controller="Chart" asp-action="ExerciseIndex" asp-route-UserName="@Model.UserName">Exercise Graph</a> |
<a asp-controller="Chart" asp-action="StepIndex" asp-route-UserName="@Model.UserName">Step Graph</a>*@
@*<p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IdAbbrev)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Address1)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Address2)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.State)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Zip)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DegreeAbbreviation)
                    </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdAbbrev)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DegreeAbbreviation)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
    }
        </tbody>
    </table>*@
